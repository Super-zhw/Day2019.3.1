<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!-- 开启注解 -->
    <context:annotation-config/>
    <!-- 扫包  -->
    <context:component-scan base-package="com.zhw.d6.demo1"/>
    <!-- 导入资源 -->
    <context:property-placeholder location="classpath:jdbc-d6.properties"/>
    <!-- 配置数据源 -->
    <bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <!--&lt;!&ndash; xml 声明式 &ndash;&gt;-->
    <!--&lt;!&ndash; 事务管理器 &ndash;&gt;-->
    <!--<bean id="dataSourceTransactionManager" class="org.springframework.jdbc-d5.properties.datasource.DataSourceTransactionManager">-->
    <!--<property name="dataSource" ref="druidDataSource"/>-->
    <!--</bean>-->
    <!--&lt;!&ndash;<tx:annotation-driven transaction-manager="dataSourceTransactionManager" />&ndash;&gt;-->
    <!--&lt;!&ndash; 编写通知：对事务进行增强 &ndash;&gt;-->
    <!--<tx:advice id="transactionInterceptor" transaction-manager="dataSourceTransactionManager">-->
    <!--<tx:attributes>-->
    <!--<tx:method name="get*" read-only="true"/>-->
    <!--<tx:method name="select*" read-only="true"/>-->
    <!--<tx:method name="find*" read-only="true"/>-->
    <!--<tx:method name="update*"/>-->
    <!--<tx:method name="insert*"/>-->
    <!--<tx:method name="delete*"/>-->
    <!--<tx:method name="*" read-only="true"/>-->
    <!--</tx:attributes>-->
    <!--</tx:advice>-->
    <!--&lt;!&ndash; 编写切面 &ndash;&gt;-->
    <!--<aop:config>-->
    <!--&lt;!&ndash; 切入点 &ndash;&gt;-->
    <!--<aop:pointcut id="txPointCut" expression="execution( * org.mybatis.spring.*.*(..))" />-->
    <!--&lt;!&ndash; 切面 &ndash;&gt;-->
    <!--<aop:advisor advice-ref="transactionInterceptor" pointcut-ref="txPointCut" />-->
    <!--</aop:config>-->

    <!--<bean id="springManagedTransactionFactory" class="org.mybatis.spring.transaction.SpringManagedTransactionFactory"/>-->
    <!-- 配置会话工厂bean -->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 配置数据源 -->
        <property name="dataSource" ref="druidDataSource"/>
        <!-- 配置文件 -->
        <property name="configLocation" value="mybatis-config-d6.xml"/>
        <!-- 映射文件 -->
        <!--<property name="mapperLocations">-->
        <!--<array>-->
        <!--<value>mapper-d6.xml</value>-->
        <!--</array>-->
        <!--</property>-->
        <!-- 事务 -->
        <!--<property name="transactionFactory" ref=""/>-->
    </bean>
    <!-- 配置会话模板，并且注入工厂 -->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="close">
        <constructor-arg ref="sqlSessionFactoryBean"/>
    </bean>


</beans>